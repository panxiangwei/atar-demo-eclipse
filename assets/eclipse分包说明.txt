步骤:
1.0 先要安装ant 见 http://blog.csdn.net/harryptter/article/details/52570535

2.0 合并多个jar为一个jar，
2.1 建立build.xml分包执行文件（本工程就在工程根目录下，正式模板已经写好，里面basedir 存放所有jar包全路径 ，destfile 为合并后生成的jar目标文件名 classes2.jar）
2.2 执行命令合并jar包 ant -buildfile /Users/xuelanbin/Downloads/taogubaappgit/taogbaapp/build.xml 在basedir目录下会生成classes2.jar

3.0 执行命令去android的sdk/platform-tools/ 目录下查看有无dx和dx.jar文件，同时拷贝classes2.jar到该目录下， 如果没有dx和dx.jar文件去sdk/build-tools/22.01/(build-tools下任意一个版本下拷贝dex和dx.jar文件过来)
3.1 在sdk/platform-tools/下面执行 dx --dex --output=classes2.dex classes2.jar    //jar 转dex命令（2.2执行命令生成后的classes2.jar转为classes2.dex）

4.0 将3中生成的classes2.dex放在工程src下 (注src下 classes2.dex的文件名一定要按照顺序来写 classes2.dex classes3.dex classes4.dex classes5.dex 
	分包系统默认的dex文件名为classes.dex，并且文件名只能为classes再加上一个数字和后缀.dex, 
	同时src下该dex文件没有 classes2.dex时不能写成classes3.dex 即数字只能从2，3，4，5 ... 不能跳跃缺少前面数字直接命名为后面数字)
	为了方便 2.1步骤中生成合并的jar为classes2.jar即:destfile="classes2.jar" 和3.1步骤中默认生成dex文件为classes2.dex即 dx --dex --output=classes2.dex classes2.jar 
	该两个文件名可以自定义改也可以生成文件后重新命名，但src下一定要按照上面规则来命名)

5.0 (请读完) 既然把大部分jar分包dex，就把原来libs下面 在2.0步骤里面合并过的jar删除，那么工程编译不过，再在工程里面建lib文件将2.0步骤里面合并过的jar添加进来  
	将报错所需要的jar（import 需要的jar）  add to Build Path (严格来讲 将报错所需要的jar（import 需要的jar）添加到lib下面 再add to Build Path)
    并在配置里面java Build Path - Other and Export 把2.0步骤里面合并过的jar全部不要勾选（意思为：实际打包不参与进来）
    这里我们在2.1下面就basedir就已经把所要合并的jar全放在一个文件夹且该文件夹就为工程的lib文件。
    所以为了方便 该目录就已经写好为 basedir="/Users/xuelanbin/Downloads/taogubaappgit/taogbaapp/lib" （basedir可为人为自定义任何目录下文件夹）
    2.2执行完成工程要刷新一下才能看到lib下生成classes2.jar
    3.0拷贝classes2.jar到sdk/platform-tools/ 目录下后 和5.0全部add to Build Path 这前 这之间要把lib下classes2.jar删除掉
    此说明中文件全路径皆为本人电脑全路径，具体对应自己电脑全路径为准（可以工程右击lib或者build.xml在Properties-Resourse Location 中 直接拷贝全路径）
    
    文件下build2.xml为weex下jar分包
    
6.0 ok运行or打包工程 成功!
